package com.pregnant.health.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.pregnant.health.model.Type;
import com.pregnant.health.model.Category;
import com.pregnant.health.model.Catalog;

import com.pregnant.health.dao.TypeDao;
import com.pregnant.health.dao.CategoryDao;
import com.pregnant.health.dao.CatalogDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig typeDaoConfig;
    private final DaoConfig categoryDaoConfig;
    private final DaoConfig catalogDaoConfig;

    private final TypeDao typeDao;
    private final CategoryDao categoryDao;
    private final CatalogDao catalogDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        typeDaoConfig = daoConfigMap.get(TypeDao.class).clone();
        typeDaoConfig.initIdentityScope(type);

        categoryDaoConfig = daoConfigMap.get(CategoryDao.class).clone();
        categoryDaoConfig.initIdentityScope(type);

        catalogDaoConfig = daoConfigMap.get(CatalogDao.class).clone();
        catalogDaoConfig.initIdentityScope(type);

        typeDao = new TypeDao(typeDaoConfig, this);
        categoryDao = new CategoryDao(categoryDaoConfig, this);
        catalogDao = new CatalogDao(catalogDaoConfig, this);

        registerDao(Type.class, typeDao);
        registerDao(Category.class, categoryDao);
        registerDao(Catalog.class, catalogDao);
    }
    
    public void clear() {
        typeDaoConfig.getIdentityScope().clear();
        categoryDaoConfig.getIdentityScope().clear();
        catalogDaoConfig.getIdentityScope().clear();
    }

    public TypeDao getTypeDao() {
        return typeDao;
    }

    public CategoryDao getCategoryDao() {
        return categoryDao;
    }

    public CatalogDao getCatalogDao() {
        return catalogDao;
    }

}
